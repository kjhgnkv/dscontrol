<?xml version="1.0" encoding="UTF-8"?>
<description>
 <packages>
  <package>DS</package>
 </packages>
 <header>synchronization/multiplexable.h</header>
 <class>DS::Synchronization::MultiplexRoute&lt;T></class>
 <inheritance>
  <class>DS::Synchronization::Multiplexable&lt;T></class>
  <class>DS::Synchronization::IMultiplexProbe</class>
 </inheritance>
 <methods>
  <method>
   <type>realized</type>
   <name>MultiplexRoute&lt;T></name>
   <signature>(bool bWaitAll)</signature>
  </method>
  <method>
   <type>realized</type>
   <name>Add</name>
   <signature>bool (DS::Synchronization::IMultiplexable * pObject)</signature>
  </method>
  <method>
   <type>realized</type>
   <name>Remove</name>
   <signature>void (DS::Synchronization::IMultiplexable * pObject)</signature>
  </method>
  <method>
   <type>realized</type>
   <name>GetEvent</name>
   <signature>DS::Synchronization::IMultiplexable *()</signature>
  </method>
  <method>
   <type>realized</type>
   <name>PrepareWait</name>
   <signature>void (DS::Synchronization::IMultiplexProbe * probe)</signature>
  </method>
  <method>
   <type>realized</type>
   <name>NotifyMultiplexEvent</name>
   <signature>void (DS::Synchronization::IMultiplexable * pObject)</signature>
  </method>
  <method>
   <type>realized</type>
   <name>NotifyObjectExit</name>
   <signature>void (DS::Synchronization::IMultiplexable * pObject)</signature>
  </method>
  <method>
   <type>realized</type>
   <name>IsWaitAll</name>
   <signature>bool () const</signature>
  </method>
 </methods>
</description>
